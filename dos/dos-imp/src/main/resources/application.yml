spring:
  profiles:
    active: local
  output:
    ansi:
      enabled: ALWAYS
  jpa:
    show-sql: false
    database: MYSQL
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5Dialect
        format_sql: true
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      use-new-id-generator-mappings: false
  datasource:
    platform: mysql
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initialSize: 20
      minIdle: 10
      maxActive: 300
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 30000
      poolPreparedStatements: true
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      maxPoolPreparedStatementPerConnectionSize: 20
      filters: stat,wall,slf4j
      useGlobalDataSourceStat: true
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      driver-class-name: ${spring.datasource.driver-class-name}
      username: ${spring.datasource.username}
      password: ${spring.datasource.password}

server:
  port: 8080
  servlet:
    context-path: /dos

zookeeper.connectString: mt-zookeeper-vip:2181
iot.rocketmq.brokers: mt-rocketMqDispatch-vip:9876

login.applicationType: web

iot:
  service:
    level: 1
    code: dos-web

eureka:
  client:
    healthcheck:
      enabled: true
    eureka-server-connect-timeout-seconds: 30
    eureka-server-read-timeout-seconds: 30
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}


management:
  endpoints:
    web:
      exposure:
        include: "*"

ribbon:
  eureka:
    enabled: true
  ReadTimeout: 30000
  ConnectTimeout: 30000
